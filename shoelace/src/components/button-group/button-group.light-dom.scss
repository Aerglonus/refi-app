//
// In general, we should avoid placing styles in the light DOM. However, we don't have a way to target slotted element
// parts, e.g. `::slotted(sl-button)::part(base)`, so we need these styles to make buttons groups work.
//
// The alternative approach is to set the styles with JavaScript, but this is more expensive because it requires
// multiple listeners + DOM traversals.
//
sl-button-group {
  // First
  > sl-button:first-child::part(base),
  > sl-dropdown:first-child > sl-button[slot='trigger']::part(base),
  > sl-tooltip:first-child > sl-button::part(base) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  // Last
  > sl-button:last-child::part(base),
  > sl-dropdown:last-child > sl-button[slot='trigger']::part(base),
  > sl-tooltip:last-child > sl-button::part(base) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  // Interior
  > sl-button:not(:first-child):not(:last-child)::part(base),
  > sl-dropdown:not(:first-child):not(:last-child) > sl-button[slot='trigger']::part(base),
  > sl-tooltip:not(:first-child):not(:last-child) > sl-button::part(base) {
    border-radius: 0;
  }

  // All except the first
  > sl-button:not(:first-child),
  > sl-dropdown:not(:first-child) > sl-button[slot='trigger'],
  > sl-tooltip:not(:first-child) > sl-button {
    margin-left: calc(-1 * var(--sl-input-border-width));

    // Add a visual separator between solid buttons
    &:not([type='default'])::part(base):not(:hover):not(:active):not(:focus)::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      border-left: solid 1px #ffffff40;
    }
  }

  // Hover
  > sl-button:hover,
  > sl-dropdown:hover > sl-button[slot='trigger'],
  > sl-tooltip:hover > sl-button {
    z-index: 1;
  }

  // Focus
  > sl-button.sl-focus,
  > sl-dropdown > sl-button[slot='trigger'].sl-focus,
  > sl-tooltip > sl-button.sl-focus {
    z-index: 2;
  }
}
