{"version":3,"sources":["components/DataTable/scroll-bar-width.js","components/FieldViewer/index.tsx","atoms/navigator.ts","components/DataTable/index.tsx","utils/common.ts","pages/main/main.tsx","components/PathInput/index.tsx","components/TreeView/index.tsx","pages/main/index.tsx","components/Modal/index.tsx","components/ThemeForm/index.tsx","components/DocForm/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["scrollbarWidth","scrollDiv","document","createElement","setAttribute","body","appendChild","offsetWidth","clientWidth","removeChild","fieldValueMapper","String","value","Number","Boolean","Map","JSON","stringify","Geopoint","Array","Timestamp","_seconds","_nanoseconds","Date","toISOString","FieldViewer","type","useState","isUpdated","FieldComp","className","React","memo","navigatorPath","atom","key","default","Table","columns","data","defaultColumn","useMemo","width","scrollBarSize","useTable","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","rows","totalColumnsWidth","prepareRow","RenderRow","useCallback","index","style","row","getRowProps","cells","map","cell","getCellProps","render","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","height","itemCount","length","itemSize","DataTable","setData","useRecoilState","path","Object","keys","filter","sort","a","b","localeCompare","Header","accessor","Cell","original","__METADATA","id","useEffect","topicKey","isCollectionType","split","isCollection","listener","window","listen","console","log","handler","send","topic","then","Main","PathInput","setPath","pathInput","setPathInput","name","onChange","e","target","onKeyDown","buildTree","mapObj","result","parent","join","title","children","forEach","find","node","TreeView","structTree","useRef","constructData","newObject","immutable","current","doc","merge","ref","replaceAll","collections","reduce","prev","lastPath","replace","collection","listeners","ids","Promise","all","response","showLine","treeData","onSelect","ReactGridLayout","WidthProvider","RGL","MainLayout","layout","i","x","y","w","h","cols","rowHeight","autoSize","margin","isDraggable","isResizable","Modal","footer","showing","aria-hidden","role","aria-modal","aria-labelledby","getDefaultRegistry","utils","widgets","fields","ThemeObject","ArrayFieldTemplate","props","items","element","canAdd","onClick","onAddClick","xmlns","viewBox","fill","fillRule","d","clipRule","ErrorList","errors","error","stack","ObjectFieldTemplate","properties","content","TextWidget","required","event","SelectWidget","options","enumOptions","enumDisabled","tabIndex","defaultValue","label","withTheme","DocForm","docValue","setDocValue","formRef","useForm","control","register","handleSubmit","form","useFieldArray","append","prepend","remove","swap","move","insert","fieldName","fieldValue","fieldType","language","minimap","enabled","automaticLayout","ThemeForm","schema","$ref","definitions","field","allOf","enum","oneOf","formData","App","to","location","hostname","match","recoilPersist","RecoilPersist","updateState","ReactDOM","initializeState","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d2fa0a24.chunk.js","sourcesContent":["const scrollbarWidth = () => {\n  // thanks too https://davidwalsh.name/detect-scrollbar-width\n  const scrollDiv = document.createElement(\"div\");\n  scrollDiv.setAttribute(\n    \"style\",\n    \"width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;\"\n  );\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n};\n\nexport default scrollbarWidth;\n","import React, { useEffect, useState } from \"react\";\n\nfunction getFieldType(value: any): string {\n  const fieldType = typeof value;\n  switch (fieldType) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n      return fieldType;\n    case \"object\":\n      if (value?._latitude && value?._longitude) {\n        return \"geopoint\";\n      }\n\n      if (value === null) {\n        return \"null\";\n      }\n\n      if (Array.isArray(value)) {\n        return \"array\";\n      }\n\n      // Ref case\n\n      return \"map\";\n  }\n\n  return \"object\";\n}\n\nconst fieldValueMapper: Record<string, Function> = {\n  String: ({ value }: { value: string }) => <div>{value}</div>,\n  Number: ({ value }: { value: number }) => <div>No: {value}</div>,\n  Boolean: ({ value }: { value: boolean }) => <div>Value: {String(value)}</div>,\n  Map: ({ value }: { value: any }) => <div>{JSON.stringify(value)}</div>,\n  Geopoint: ({ value }: { value: any }) => (\n    <div>Geopoint {JSON.stringify(value)}</div>\n  ),\n  Array: ({ value }: { value: any[] }) => (\n    <div>Array {JSON.stringify(value)}</div>\n  ),\n  Timestamp: ({\n    value: { _seconds, _nanoseconds },\n  }: {\n    value: { _seconds: number; _nanoseconds: number };\n  }) => (\n    <div>Time {new Date(_seconds * 1000 + _nanoseconds).toISOString()}</div>\n  ),\n};\n\n// TODO: Implement highlight when update here\nfunction FieldViewer({ value, type = \"Map\" }: { value: any; type?: string }) {\n  const [isUpdated, setUpdated] = useState(false);\n\n  // useEffect(() => {\n  //   setUpdated(true);\n  //   // console.log(\"updated\", value);\n  //   setTimeout(() => {\n  //     setUpdated(false);\n  //   }, 5000);\n  // }, [value, type]);\n\n  if (typeof value === \"undefined\") {\n    return null;\n  }\n\n  const FieldComp = fieldValueMapper[type] || fieldValueMapper[\"Map\"];\n  return (\n    <div className={isUpdated ? \"updated\" : \"\"}>\n      <FieldComp value={value} />\n    </div>\n  );\n}\n\nexport default React.memo(FieldViewer);\n","import { atom } from 'recoil';\n\nexport const navigatorPath = atom({\n  key: 'navigator.path',\n  default: '/users/Yx41lxY7FleBekLSHZAC/friends/3leZCKrEKUelBP3EEKAw'\n});\n\n","import React, { useEffect, useState } from \"react\";\nimport { useTable, useBlockLayout } from \"react-table\";\nimport { FixedSizeList } from \"react-window\";\nimport scrollbarWidth from \"./scroll-bar-width\";\nimport FieldViewer from \"@/components/FieldViewer\";\nimport { navigatorPath } from \"@/atoms/navigator\";\nimport { useRecoilState } from \"recoil\";\nimport { isCollection } from \"@/utils/common\";\n\ninterface IUser extends Record<string, any> {\n  username: string;\n  gender: string;\n}\n\nfunction Table({ columns, data }: { columns: any[]; data: any[] }) {\n  // Use the state and functions returned from useTable to build your UI\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    []\n  );\n\n  const scrollBarSize = React.useMemo(() => scrollbarWidth(), []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    totalColumnsWidth,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n    },\n    useBlockLayout\n  );\n\n  const RenderRow = React.useCallback(\n    ({ index, style }) => {\n      const row = rows[index];\n      prepareRow(row);\n      return (\n        <div\n          {...row.getRowProps({\n            style,\n          })}\n          className=\"tr\"\n        >\n          {row.cells.map((cell: any) => {\n            return (\n              <div {...cell.getCellProps()} className=\"td\">\n                {cell.render(\"Cell\")}\n              </div>\n            );\n          })}\n        </div>\n      );\n    },\n    [prepareRow, rows]\n  );\n\n  // Render the UI for your table\n  return (\n    <div {...getTableProps()} className=\"table\">\n      <div>\n        {headerGroups.map((headerGroup: any) => (\n          <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\n            {headerGroup.headers.map((column: any) => (\n              <div {...column.getHeaderProps()} className=\"th\">\n                {column.render(\"Header\")}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      <div {...getTableBodyProps()}>\n        <FixedSizeList\n          height={400}\n          itemCount={rows.length}\n          itemSize={35}\n          width={totalColumnsWidth + scrollBarSize}\n        >\n          {RenderRow}\n        </FixedSizeList>\n      </div>\n    </div>\n  );\n}\n\nfunction DataTable() {\n  const [data, setData] = useState<IUser[]>([]);\n  const [path, setPath] = useRecoilState(navigatorPath);\n\n  const columns = React.useMemo(() => {\n    if (data?.length > 0) {\n      // TODO: Sort column by alphabet like firebase\n      return Object.keys(data[0])\n        .filter((key) => key !== \"__METADATA\")\n        .sort((a, b) => a.localeCompare(b))\n        .map((key) => ({\n          Header: key,\n          accessor: key,\n          Cell: ({\n            row,\n            value,\n            column,\n          }: {\n            row: any;\n            value: any;\n            column: any;\n          }) => {\n            return (\n              <FieldViewer\n                value={value}\n                type={row?.original?.__METADATA?.type?.[column.id] || \"Object\"}\n              />\n            );\n          },\n        }));\n    }\n\n    return [];\n  }, [data]);\n\n  useEffect(() => {\n    const topicKey = `${path}.table`;\n    const isCollectionType = isCollection(path);\n    const listener = window.listen(topicKey, (data: any) => {\n      if (isCollectionType) {\n        setData(data as IUser[]);\n      } else {\n        console.log(data);\n      }\n    });\n    const handler = isCollectionType\n      ? \"fs.queryCollection.subscribe\"\n      : \"fs.queryDoc.subscribe\";\n    const id = window\n      .send(handler, {\n        topic: topicKey,\n        path,\n      })\n      .then((a) => console.log(a));\n\n    console.log({\n      topic: topicKey,\n      path,\n    });\n\n    return () => {\n      listener();\n      window.send(\"fs.unsubscribe\", {\n        id,\n      });\n    };\n  }, [path]);\n\n  return <Table columns={columns} data={data} />;\n}\n\nexport default DataTable;\n","const isCollection = (path = \"\") : boolean => {\n  return !Boolean(path.split(\"/\").length % 2);\n};\n\nexport {\n  isCollection\n}\n","import React from \"react\";\nimport DataTable from \"@/components/DataTable\";\nimport { navigatorPath } from \"@/atoms/navigator\";\nimport { useRecoilState } from \"recoil\";\n\nfunction Main() {\n  const [path, setPath] = useRecoilState(navigatorPath);\n\n  return (\n    <div className=\"h-full p-2 border border-gray-300 rounded shadow-sm main \">\n      <div>Filter here</div>\n      <DataTable key={path} />\n    </div>\n  );\n}\n\nexport default Main;\n","import { navigatorPath } from \"@/atoms/navigator\";\nimport { KeyboardEvent, ChangeEvent, useState, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\n\nfunction PathInput() {\n  const [path, setPath] = useRecoilState(navigatorPath);\n  const [pathInput, setPathInput] = useState(path);\n\n  const handleChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    setPathInput(e.target.value);\n  };\n\n  const handlePathChange = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      setPath(pathInput);\n    }\n  };\n\n  useEffect(() => {\n    setPathInput(path);\n  }, [path]);\n\n  return (\n    <div>\n      <input\n        name=\"pathInput\"\n        type=\"text\"\n        value={pathInput}\n        onChange={handleChangeValue}\n        onKeyDown={handlePathChange}\n        className=\"block w-full mt-1 bg-gray-100 border-transparent rounded focus:border-gray-500 focus:bg-white focus:ring-0\"\n      ></input>\n    </div>\n  );\n}\n\nexport default PathInput;\n","import { useEffect, useRef, useState } from \"react\";\nimport * as immutable from \"object-path-immutable\";\nimport Tree from \"rc-tree\";\nimport \"rc-tree/assets/index.css\";\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\nimport { navigatorPath } from \"@/atoms/navigator\";\n\ninterface TreeNode {\n  key: string;\n  title: string;\n  children: TreeNode[];\n  isCollection: boolean;\n}\n\nfunction buildTree(\n  mapObj: Record<string, any>,\n  result: TreeNode[],\n  parent: string = \"\",\n  isCollection: boolean = true\n): TreeNode[] {\n  result = Object.keys(mapObj).map((key) => ({\n    key: [parent, key].join(\"/\"),\n    title: key,\n    children: [],\n    isCollection: isCollection,\n  }));\n\n  Object.keys(mapObj).forEach((key) => {\n    const parent = result.find((node: TreeNode) => node.title === key);\n    if (parent) {\n      parent.children = buildTree(mapObj[key], [], parent.key, !isCollection);\n    }\n  });\n\n  return result;\n}\n\nfunction TreeView() {\n  const [path, setPath] = useRecoilState(navigatorPath);\n  const [data, setData] = useState<TreeNode[]>([]);\n  const structTree = useRef({});\n\n  const constructData = (data: any[]) => {\n    const newObject = immutable.wrap(structTree.current);\n\n    data.forEach((doc: any) => {\n      newObject.merge(doc?.ref?.path.replaceAll(\"/\", \".\"), {});\n    });\n\n    structTree.current = newObject.value();\n    setData(buildTree(structTree.current, []));\n  };\n\n  useEffect(() => {\n    const collections = path\n      .split(\"/\")\n      .reduce((prev: string[], current: string) => {\n        const lastPath = prev[prev.length - 1];\n        return [...prev, [lastPath, current].join(\"/\").replace(\"//\", \"/\")];\n      }, [])\n      .filter((collection, index) => index % 2);\n    const listeners = collections.map((collection) => {\n      return window.listen(collection, (data: any[]) => constructData(data));\n    });\n\n    const ids = Promise.all(\n      collections.map((collection) => {\n        return window\n          .send(\"fs.pathExplorer.subscribe\", {\n            topic: collection,\n            path: collection,\n          })\n          .then((response) => {\n            return response.id;\n          }) as Promise<string>;\n      })\n    );\n\n    console.log(ids);\n\n    return () => {\n      listeners.forEach((listener) => listener());\n      // Promise.all(\n      //   ids.map((id: string) =>\n      //     window.send(\"fs.unsubscribe\", {\n      //       id,\n      //     })\n      //   )\n      // );\n    };\n  }, [path]);\n\n  const handleSelectTree = (keys: React.ReactText[]) => {\n    if (keys.length > 0) {\n      setPath(keys[0] as string);\n    }\n  };\n\n  return (\n    <div>\n      <Tree showLine treeData={data} onSelect={handleSelectTree} height={500} />\n    </div>\n  );\n}\n\nexport default TreeView;\n","import React from \"react\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport Main from \"./main\";\nimport PathInput from \"@/components/PathInput\";\nimport TreeView from \"@/components/TreeView\";\n\nimport \"react-grid-layout/css/styles.css\";\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nfunction MainLayout() {\n  const layout = [\n    { i: \"nav-bar\", x: 0, y: 0, w: 12, h: 1 },\n    { i: \"sidebar\", x: 0, y: 0, w: 3, h: 8 },\n    { i: \"main\", x: 3, y: 0, w: 7, h: 8 },\n    { i: \"property\", x: 10, y: 0, w: 2, h: 8 },\n  ];\n  return (\n    <ReactGridLayout\n      className=\"layout\"\n      layout={layout}\n      cols={12}\n      rowHeight={64}\n      autoSize={true}\n      margin={[16, 16]}\n      isDraggable={false}\n      isResizable={false}\n    >\n      <div key=\"nav-bar\">\n        <PathInput />\n      </div>\n      <div key=\"sidebar\">\n        <TreeView />\n      </div>\n      <div key=\"main\">\n        <Main />\n      </div>\n      <div key=\"property\">Property</div>\n    </ReactGridLayout>\n  );\n}\n\nexport default MainLayout;\n","import React from \"react\";\n\ninterface Props {\n  title?: React.ReactElement | string;\n  children: React.ReactElement;\n  footer?: React.ReactElement;\n  showing?: Boolean;\n}\n\nconst Modal = ({ title, children, footer, showing = false }: Props) => {\n  if (!showing) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n        <div className=\"flex items-end justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\n          <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n            <div className=\"absolute inset-0 bg-gray-500 opacity-75\" />\n          </div>\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden inline-block align-middle h-screen\"\n            aria-hidden=\"true\"\n          >\n            ​\n          </span>\n          <div\n            className=\"inline-block overflow-hidden text-left align-bottom transition-all transform bg-white rounded-lg shadow-xl\"\n            role=\"dialog\"\n            aria-modal=\"true\"\n            aria-labelledby=\"modal-headline\"\n          >\n            <div className=\"px-4 pt-5 pb-4 bg-white sm:p-6 sm:pb-4\">\n              <div>\n                <div className=\"text-left\">\n                  <h3\n                    className=\"text-lg font-medium leading-6 text-gray-900\"\n                    id=\"modal-headline\"\n                  >\n                    {title}\n                  </h3>\n                  <div className=\"mt-2\">{children}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"px-4 py-3 bg-gray-50 sm:px-6 sm:flex sm:flex-row-reverse\">\n              {footer}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import { WidgetProps, withTheme, utils, ArrayFieldTemplateProps, ObjectFieldTemplateProps } from '@rjsf/core';\nimport { Listbox, Transition } from \"@headlessui/react\";\n\nconst { getDefaultRegistry } = utils;\nconst { fields, widgets } = getDefaultRegistry();\n\nfunction MyArrayFieldTemplate(props: ArrayFieldTemplateProps) {\n  return (\n    <div>\n      {props.items.map((element: any) => element.children)}\n      {props.canAdd && <button\n        type=\"button\"\n        className=\"flex items-center secondary-btn\"\n        onClick={props.onAddClick}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          className=\"w-6 h-6 mr-1 fill-current text-grey hover:text-grey-darkest\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>{\" \"}\n          Add field\n        </button>}\n    </div>\n  );\n}\n\nfunction MyErrorListTemplate({ errors }: { errors: any[] }) {\n  return (\n    <ul>\n      {errors.map(error => (\n        <li key={error.stack}>\n          {error.stack}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction TextWidget(props: WidgetProps) {\n  return (\n    <input\n      type=\"text\"\n      className=\"input-field\"\n      value={props.value}\n      required={props.required}\n      onChange={(event) => props.onChange(event.target.value)} />\n  )\n}\n\nfunction SelectWidget(props: WidgetProps) {\n  const { enumOptions, enumDisabled } = props.options;\n  return (\n    <div className=\"w-full max-w-xs mx-auto\">\n      <select\n        tabIndex={-1}\n        id=\"fieldType\"\n        className=\"input-field\"\n        defaultValue=\"string\"\n        onChange={(event) => props.onChange(event.target.value)}\n        value={props.value}\n      >\n        {(enumOptions as any[])?.map(({ value, label }) => (\n          <option value={value} key={value}>\n            {label}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nfunction ObjectFieldTemplate(props: ObjectFieldTemplateProps) {\n  return (\n    <div>\n      {props.title}\n      {/* {props.description} */}\n      {props.properties.map(element => <div className=\"property-wrapper\">{element.content}</div>)}\n    </div>\n  );\n}\n\nconst ThemeObject = {\n  ArrayFieldTemplate: MyArrayFieldTemplate,\n  ErrorList: MyErrorListTemplate,\n  ObjectFieldTemplate,\n  widgets: {\n    ...widgets,\n    TextWidget,\n    SelectWidget\n  }\n}\nexport default withTheme(ThemeObject);","import { useForm, useFieldArray, FormProvider } from \"react-hook-form\";\nimport FieldForm from \"@/components/FieldForm\";\nimport { useEffect, useState } from \"react\";\nimport Editor from '@monaco-editor/react';\nimport Form from '@rjsf/core';\nimport ThemeForm from '../ThemeForm/index';\n\n\nconst fieldTypes = [\n  \"string\",\n  \"number\",\n  \"boolean\",\n  \"map\",\n  \"array\",\n  \"null\",\n  \"timestamp\",\n  \"geopoint\",\n];\n\nconst DocForm = () => {\n  const [docValue, setDocValue] = useState(\"\");\n  const formRef = useForm();\n  const { register, handleSubmit, control, errors } = formRef;\n  const onSubmit = (data: any) => console.log(data);\n\n  window.form = formRef;\n\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\n    {\n      control,\n      name: \"mainObject\",\n    }\n  );\n\n  useEffect(() => {\n    append({ fieldName: \"\", fieldValue: \"\", fieldType: \"string\" });\n  }, []);\n\n  return (\n    <div className=\"flex flex-row\">\n      <div className=\"flex-1\">\n        <Editor language=\"json\" value={JSON.stringify(docValue)} options={{\n          minimap: {\n            enabled: false,\n          },\n          automaticLayout: true,\n        }} />\n      </div>\n      <div className=\"flex-1\">\n        <ThemeForm\n          schema={{\n            type: \"array\",\n            items: {\n              $ref: '#/definitions/field'\n            },\n            definitions: {\n              field: {\n                type: \"object\",\n                allOf: [\n                  {\n                    properties: {\n                      name: {\n                        type: \"string\"\n                      },\n                      type: { type: \"string\", enum: [\"string\", \"number\", \"map\", \"array\", \"geopoint\", \"null\", \"timestamp\"] }\n                    }\n                  }, {\n                    oneOf: [\n                      {\n                        title: \"string\",\n                        properties: {\n                          value: { type: 'string' }\n                        }\n                      },\n                      {\n                        title: \"number\",\n                        properties: {\n                          value: { type: 'number' }\n                        }\n                      },\n                      {\n                        title: \"map\",\n                        properties: {\n                          value: {\n                            $ref: '#/definitions/field'\n                          }\n                        }\n                      },\n                      {\n                        title: \"array\",\n                        properties: {\n                          value: {\n                            type: 'array', items: {\n                              $ref: '#/definitions/field'\n                            }\n                          }\n                        }\n                      },\n                      {\n                        title: \"null\",\n                        properties: {\n                          value: { type: 'null' }\n                        }\n                      }\n                    ]\n                  }\n                ]\n              }\n            }\n          }}\n          formData={docValue}\n          onChange={value => setDocValue(value.formData)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default DocForm;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MainLayout from \"./pages/main\";\n\nimport Modal from \"@/components/Modal\";\nimport DocForm from \"@/components/DocForm\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <div>Login here</div>\n        </Route>\n        <Route path=\"/:projectId\">\n          <MainLayout />\n        </Route>\n        <Route path=\"/\">\n          <div>\n            <Link to=\"/refi-client\">Go to my project</Link>\n            <Modal showing title=\"Create document\">\n              <DocForm />\n            </Modal>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport recoilPersist from \"recoil-persist\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst { RecoilPersist, updateState } = recoilPersist();\n\nReactDOM.render(\n  <BrowserRouter>\n    <RecoilRoot initializeState={updateState}>\n      <RecoilPersist />\n      <App />\n    </RecoilRoot>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}