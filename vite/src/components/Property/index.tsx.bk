import { docAtom, pathExpanderAtom } from "@/atoms/firestore";
import { navigatorPathAtom } from "@/atoms/navigator";
import { getListCollections } from "@/utils/common";
import { Anchor } from "@zendeskgarden/react-buttons";
import { Input } from "@zendeskgarden/react-forms";
import React, { useMemo } from "react";
import { useRecoilValue } from "recoil";
import ReactJson from "react-json-view";
import EditableField from "../EditableField";

const Property = () => {
  const currentPath = useRecoilValue(navigatorPathAtom);
  const pathAvailable = useRecoilValue(pathExpanderAtom);
  const doc = useRecoilValue(docAtom(currentPath));

  const listCollections = useMemo(() => {
    return getListCollections(currentPath, pathAvailable);
  }, [currentPath, pathAvailable]);

  if (!doc) {
    return null;
  }

  const handleEdit = (data: any) => {
    console.log(data);
  };

  return (
    <div className="h-full overflow-auto">
      <Input placeholder="Search for property..." isCompact />
      <div>
        <h3>Collections</h3>
        {listCollections.map((collection) => (
          <div className="block" key={collection}>
            <Anchor href={collection}>{collection}</Anchor>
          </div>
        ))}
      </div>
      <div>
        <h3>Fields</h3>
        <ReactJson
          src={doc.data()}
          editComponent={EditableField}
          name={null}
          indentWidth={4}
          collapsed
          enableClipboard={false}
          sortKeys={true}
          onEdit={handleEdit}
          onAdd={handleEdit}
          onDelete={handleEdit}
          quotesOnKeys={false}
          displayObjectSize={false}
          shouldCollapse={({ src, type }) =>
            type === "object" &&
            src.constructor &&
            src.constructor.name === "Moment"
          }
        />
      </div>
    </div>
  );
};

export default Property;
